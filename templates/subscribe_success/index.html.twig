{% extends 'base.html.twig' %}

{% block title %}Confirmation de votre abonnement{% endblock %}

{% block content %}

    <h1 class="font-allura text-center">Votre abonnement est confirmé</h1>

    <p class="font-helvetica-thin">Mr./Mme <strong>{{ subscription.user.firstname }} {{ subscription.user.lastname }}</strong> </p>

    <p class="font-helvetica-thin">My Mom's Box vous remercie de votre commande <strong> n° {{ subscription.reference }}</strong>.</p>
    <p class="font-helvetica-thin">Votre abonnement <strong>{{ subscription.name }} </strong> démarre sans plus attendre !</p>
    <p class="font-helvetica-thin">Votre première Mom's Box vous sera livrée incessemment sous peu à l'adresse de livraison choisi.</p>
    <p class="font-helvetica-thin">Une confirmation vient de vous être envoyé par e-mail à l'adresse <strong>{{ subscription.user.email }}</strong> </p>

    <hr>

    <p class="font-helvetica-thin">Rendez vous dans votre <a href="{{ path('account') }}">compte</a> pour suivre vos abonnements.</p>
    <button id="manage-billing-form">Mettre à jour mes informations</button>


    <hr>




{% endblock %}
{% block script %}
    <script type="text/javascript">

        //Customer Portal
        const urlParams = new URLSearchParams(window.location.search);
        const sessionId = urlParams.get("stripeSessionId");
        let customerId;

        if (sessionId) {
            fetch("/mon-compte/je-m-abonne/checkout-session/{{stripeSessionId}}")
                .then(function (result) {
                    return result.json()
                })
                .then(function (session) {
                    // We store the customer ID here so that we can pass to the
                    // server and redirect to customer portal. Note that, in practice
                    // this ID should be stored in your database when you receive
                    // the checkout.session.completed event. This demo does not have
                    // a database, so this is the workaround. This is *not* secure.
                    // You should use the Stripe Customer ID from the authenticated
                    // user on the server.
                    customerId = session.customer;

                    var sessionJSON = JSON.stringify(session, null, 2);
                    document.querySelector("pre").textContent = sessionJSON;
                })
                .catch(function (err) {
                    console.log('Error when fetching Checkout session', err);
                });
        }


        // In production, this should check CSRF, and not pass the session ID.
        // The customer ID for the portal should be pulled from the
        // authenticated user on the server.
        const manageBillingForm = document.getElementById('manage-billing-form');
        manageBillingForm.addEventListener('click', function (e) {
            e.preventDefault();
            fetch('/mon-compte/je-m-abonne/customer-portal/{{stripeSessionId}}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    sessionId: sessionId
                }),
            })
                .then((response) => response.json())
                .then((data) => {
                    window.location.href = data.url;
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        });

    </script>

{% endblock %}


